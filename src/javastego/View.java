package javastego;

import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import net.sf.image4j.codec.bmp.BMPDecoder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Riady
 */
public class View extends javax.swing.JApplet {
    private File fileImage;
    private File fileText;
    private Stego steIn;
    private Stego steOut;
    int height=0,width=0;
    File file ;
    File filetext ;
    int messageLength;
    int maxSize;
    int textSize;
    String pathCover;
    /**
     * Initializes the applet View
     */
    


     
    
    @Override
    public void init() {
        steIn = new Stego();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        buttonGroup2 = new javax.swing.ButtonGroup();
        chooseImgBut = new javax.swing.JToggleButton();
        chooseFileBut = new javax.swing.JToggleButton();
        runBut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        keyField = new javax.swing.JTextField();
        radSteg = new javax.swing.JRadioButton();
        radExt = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        saveBut = new javax.swing.JButton();
        algo3rad = new javax.swing.JRadioButton();
        algo2rad = new javax.swing.JRadioButton();
        algo1rad = new javax.swing.JRadioButton();
        fileNameLabel = new javax.swing.JLabel();
        maxSizeLabel = new javax.swing.JLabel();
        fileTextLabel = new javax.swing.JLabel();
        sizeLabel = new javax.swing.JLabel();
        warningText = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PSNRField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        saveField = new javax.swing.JTextField();

        jLabel3.setText("jLabel3");

        jTextField1.setText("jTextField1");

        chooseImgBut.setText("Choose Image");
        chooseImgBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImgButActionPerformed(evt);
            }
        });

        chooseFileBut.setText("Choose file text");
        chooseFileBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButActionPerformed(evt);
            }
        });

        runBut.setText("Run");
        runBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButActionPerformed(evt);
            }
        });

        jLabel1.setText("key :");

        buttonGroup1.add(radSteg);
        radSteg.setSelected(true);
        radSteg.setText("Embed");

        buttonGroup1.add(radExt);
        radExt.setText("Extract");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("hasil ekstraksi :");

        saveBut.setText("Save");
        saveBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButActionPerformed(evt);
            }
        });

        buttonGroup2.add(algo3rad);
        algo3rad.setText("4-Pixel");

        buttonGroup2.add(algo2rad);
        algo2rad.setText("9-Pixel");

        buttonGroup2.add(algo1rad);
        algo1rad.setSelected(true);
        algo1rad.setText("Normal");

        maxSizeLabel.setText("        kb");

        jLabel4.setText("PSNR :");

        jLabel5.setText("Save As :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(120, 120, 120)
                                .addComponent(jLabel4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(PSNRField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(saveBut)
                                            .addComponent(saveField))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(radExt)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(algo2rad))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(radSteg)
                                                .addGap(43, 43, 43)
                                                .addComponent(algo1rad)))))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(runBut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(warningText))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chooseImgBut)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileNameLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chooseFileBut)
                                    .addComponent(sizeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileTextLabel)
                                .addGap(18, 18, 18)
                                .addComponent(maxSizeLabel)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(algo3rad)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseImgBut)
                            .addComponent(fileNameLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(algo1rad)
                            .addComponent(radSteg))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(sizeLabel)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(warningText))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseFileBut)
                            .addComponent(maxSizeLabel)
                            .addComponent(fileTextLabel))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(keyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(PSNRField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(saveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(runBut)
                            .addComponent(saveBut)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(algo2rad)
                            .addComponent(radExt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(algo3rad, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseFileButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileButActionPerformed
        // TODO add your handling code here:
        
        JFileChooser jc = new JFileChooser();
        int returnVal = jc.showOpenDialog((Component)evt.getSource());
        if(returnVal == JFileChooser.APPROVE_OPTION){
            filetext = jc.getSelectedFile();
            steIn.readHiddenText(filetext.getAbsolutePath());
            fileTextLabel.setText(filetext.getAbsolutePath());
            sizeLabel.setText(Integer.toString(steIn.getTextSize())+" kb");
            textSize = steIn.getTextSize();
        }
    }//GEN-LAST:event_chooseFileButActionPerformed

    private void chooseImgButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImgButActionPerformed
        // TODO add your handling code here:
        
        JFileChooser jc = new JFileChooser();
        int returnVal = jc.showOpenDialog((Component)evt.getSource());
        if(returnVal == JFileChooser.APPROVE_OPTION){
            
            file = jc.getSelectedFile();
            steIn.Import(file.getAbsolutePath());
            pathCover= file.getAbsolutePath();
            ViewImage vi = new ViewImage();
            vi.setFile(file);
            JFrame a = new JFrame();
            vi.init();
            a.getContentPane().add(vi);
            a.pack();
            
            try {
                BufferedImage buf = BMPDecoder.read(file);
                height = buf.getHeight();
                width = buf.getWidth();
            } catch (IOException ex) {
                Logger.getLogger(JavaStego.class.getName()).log(Level.SEVERE, null, ex);
            }
            a.setSize(height, width);
            a.setVisible(true);    
            fileNameLabel.setText(file.getAbsolutePath());
            maxSizeLabel.setText("max size : "+Integer.toString(steIn.getMaxSize())+" kb");
            maxSize = steIn.getMaxSize();
        }
        
    }//GEN-LAST:event_chooseImgButActionPerformed

    private void runButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButActionPerformed
        // TODO add your handling code here:
        String skey = keyField.getText();
        int key = 0;
        for(int i=0;i<skey.length();i++){
            key += (int) (skey.charAt(i));
        }
        if(algo1rad.isSelected()){   
          
            steIn.setKey(key);
            if(radSteg.isSelected()){
                if(maxSize>textSize){
                    //steIn.encrypt(skey);
                    steIn.setStego();
                    steIn.Export("nyoba.bmp");
                    File file= new File("nyoba.bmp");
                    ViewImage vi = new ViewImage();
                    vi.setFile(file);
                    JFrame a = new JFrame();
                    vi.init();
                    a.getContentPane().add(vi);
                    a.pack();
                    a.setSize(height, width);
                    a.setVisible(true);
                    PSNRField.setText(Double.toString(XinLiao.PSNR(pathCover, "nyoba.bmp")));
                }
                else{
                    warningText.setText("file teks terlalu besar");
                }
            }
            else{
                steIn.skey = skey;
                jTextArea1.setText(steIn.getStego());
            }
        }
        if(algo3rad.isSelected()){
            if(radSteg.isSelected()){
                String message = "";
                String temp;
                BufferedReader inputFile = null;
                 try {

                    inputFile = new BufferedReader(new FileReader(filetext.getAbsolutePath()));
                    while((temp = inputFile.readLine()) != null){
                        message += temp + " ";
                    }
                } catch (FileNotFoundException ex) {
                } catch (IOException ex) {
                }
                messageLength = XinLiao.embedMessage(message, skey, file.getAbsolutePath(), "nyoba.bmp");
                File file= new File("nyoba.bmp");
                    ViewImage vi = new ViewImage();
                    vi.setFile(file);
                    JFrame a = new JFrame();
                    vi.init();
                    a.getContentPane().add(vi);
                    a.pack();
                    a.setSize(height, width);
                    a.setVisible(true);
                    PSNRField.setText(Double.toString(XinLiao.PSNR(pathCover, "nyoba.bmp")));
             }
            else{
                jTextArea1.setText(XinLiao.extractMessage(skey, file.getAbsolutePath()));
            }
        }
        
    }//GEN-LAST:event_runButActionPerformed

    private void saveButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButActionPerformed
        // TODO add your handling code here:
        String filename = saveField.getText();
        steIn.Export(filename);
    }//GEN-LAST:event_saveButActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PSNRField;
    private javax.swing.JRadioButton algo1rad;
    private javax.swing.JRadioButton algo2rad;
    private javax.swing.JRadioButton algo3rad;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JToggleButton chooseFileBut;
    private javax.swing.JToggleButton chooseImgBut;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JLabel fileTextLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField keyField;
    private javax.swing.JLabel maxSizeLabel;
    private javax.swing.JRadioButton radExt;
    private javax.swing.JRadioButton radSteg;
    private javax.swing.JButton runBut;
    private javax.swing.JButton saveBut;
    private javax.swing.JTextField saveField;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JLabel warningText;
    // End of variables declaration//GEN-END:variables
}
